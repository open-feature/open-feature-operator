// Code generated by MockGen. DO NOT EDIT.
// Source: ./controllers/core/flagd/resources/interface.go

// Package commonmock is a generated GoMock package.
package commonmock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/open-feature/open-feature-operator/apis/core/v1beta1"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// MockIFlagdResource is a mock of IFlagdResource interface.
type MockIFlagdResource struct {
	ctrl     *gomock.Controller
	recorder *MockIFlagdResourceMockRecorder
}

// MockIFlagdResourceMockRecorder is the mock recorder for MockIFlagdResource.
type MockIFlagdResourceMockRecorder struct {
	mock *MockIFlagdResource
}

// NewMockIFlagdResource creates a new mock instance.
func NewMockIFlagdResource(ctrl *gomock.Controller) *MockIFlagdResource {
	mock := &MockIFlagdResource{ctrl: ctrl}
	mock.recorder = &MockIFlagdResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFlagdResource) EXPECT() *MockIFlagdResourceMockRecorder {
	return m.recorder
}

// AreObjectsEqual mocks base method.
func (m *MockIFlagdResource) AreObjectsEqual(o1, o2 client.Object) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AreObjectsEqual", o1, o2)
	ret0, _ := ret[0].(bool)
	return ret0
}

// AreObjectsEqual indicates an expected call of AreObjectsEqual.
func (mr *MockIFlagdResourceMockRecorder) AreObjectsEqual(o1, o2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AreObjectsEqual", reflect.TypeOf((*MockIFlagdResource)(nil).AreObjectsEqual), o1, o2)
}

// GetResource mocks base method.
func (m *MockIFlagdResource) GetResource(ctx context.Context, flagd *v1beta1.Flagd) (client.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", ctx, flagd)
	ret0, _ := ret[0].(client.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource.
func (mr *MockIFlagdResourceMockRecorder) GetResource(ctx, flagd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockIFlagdResource)(nil).GetResource), ctx, flagd)
}
