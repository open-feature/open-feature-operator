---
apiVersion: core.openfeature.dev/v1alpha2
kind: FeatureFlagConfiguration
metadata:
  name: end-to-end
spec:
  featureFlagSpec:
    flags:
      new-welcome-message:
        state: ENABLED
        variants:
          "on": true
          "off": false
        defaultVariant: "on"
      hex-color:
        state: ENABLED
        variants:
          red: "#CC0000"
          green: "#00CC00"
          blue: "#0000CC"
          yellow: yellow
        defaultVariant: green
      fib-algo:
        state: ENABLED
        variants:
          recursive: recursive
          memo: memo
          loop: loop
          binet: binet
        defaultVariant: recursive
        "targeting": {
          "if": [
            {
              "in": [ "@faas.com", {
                "var": [ "email" ]
              } ]
            }, "binet", null
          ]
        }
---
apiVersion: core.openfeature.dev/v1alpha3
kind: FlagSourceConfiguration
metadata:
  name: end-to-end
spec:
  sources:
    - source: default/end-to-end
      provider: kubernetes
  envVars:
    - name: FLAGD_CORS_ORIGIN
      value: "http://ofoclientapp.com:8080"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ofoclientapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ofoclientapp
  template:
    metadata:
      labels:
        app: ofoclientapp
    spec:
      serviceAccountName: default
      containers:
        - image: ghcr.io/skyerus/ofo-client-app:latest
          imagePullPolicy: IfNotPresent
          name: ofoclientapp
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ofoclientapp
  labels:
    app: ofoclientapp
    service: ofoclientappservice
spec:
  ports:
    - name: http
      port: 8000
      targetPort: 3000
  selector:
    app: ofoclientapp
---
apiVersion: v1
kind: Service
metadata:
  name: open-feature-dev-flagd
  namespace: open-feature-operator-system
  labels:
    flagd: open-feature-dev-flagd
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8013
  selector:
    flagd: open-feature-dev-flagd
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: clientsidegateway
spec:
  gatewayClassName: istio
  listeners:
    - name: ofoclientapp
      hostname: "ofoclientapp.com"
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
    - name: open-feature-dev-flagd
      hostname: "flagd.ofoclientapp.com"
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: ofo-client-app
spec:
  parentRefs:
    - name: clientsidegateway
  hostnames: ["ofoclientapp.com"]
  rules:
    - backendRefs:
        - name: ofoclientapp
          port: 8000
---
apiVersion: core.openfeature.dev/v1alpha1
kind: Flagd
metadata:
  name: open-feature-dev-flagd
  namespace: open-feature-operator-system
spec:
  service: open-feature-dev-flagd
  flagSourceConfiguration: default/end-to-end
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: ReferenceGrant
metadata:
  name: ofo-reference-grant
  namespace: open-feature-operator-system
spec:
  from:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      namespace: default
  to:
    - group: ""
      kind: Service
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: ofo-flag-provider
spec:
  parentRefs:
    - name: clientsidegateway
  hostnames: ["flagd.ofoclientapp.com"]
  rules:
    - backendRefs:
        - name: open-feature-dev-flagd
          namespace: open-feature-operator-system
          port: 80
---
