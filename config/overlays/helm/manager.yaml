apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  replicas: 0{{ .Values.controllerManager.replicas }}
  template:
    spec: 
      containers:
        - name: manager
          image: "{{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag }}"
          resources:
            limits:
              cpu: "{{ .Values.controllerManager.manager.resources.limits.cpu }}"
              memory: "{{ .Values.controllerManager.manager.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.controllerManager.manager.resources.requests.cpu }}"
              memory: "{{ .Values.controllerManager.manager.resources.requests.memory }}"
          env: 
          - name: SIDECAR_MANAGEMENT_PORT
            value: "{{ .Values.sidecarConfiguration.managementPort }}"
          - name: SIDECAR_PORT
            value: "{{ .Values.sidecarConfiguration.port }}"
          - name: SIDECAR_SOCKET_PATH
            value: "{{ .Values.sidecarConfiguration.socketPath }}"
          - name: SIDECAR_IMAGE
            value: "{{ .Values.sidecarConfiguration.image.repository }}"
          - name: SIDECAR_TAG
            value: "{{ .Values.sidecarConfiguration.image.tag }}"
          - name: SIDECAR_PROVIDER_ARGS
            value: "{{ .Values.sidecarConfiguration.providerArgs }}"
          - name: SIDECAR_ENV_VAR_PREFIX
            value: "{{ .Values.sidecarConfiguration.envVarPrefix }}"
          - name: SIDECAR_SYNC_PROVIDER
            value: "{{ .Values.sidecarConfiguration.defaultSyncProvider }}"
          - name: SIDECAR_EVALUATOR
            value: "{{ .Values.sidecarConfiguration.evaluator }}"
          - name: SIDECAR_LOG_FORMAT
            value: "{{ .Values.sidecarConfiguration.logFormat }}"
          - name: SIDECAR_PROBES_ENABLED
            value: "{{ .Values.sidecarConfiguration.probesEnabled }}"
          - name: FLAGD_PROXY_IMAGE
            value: "{{ .Values.flagdProxyConfiguration.image.repository }}"
          - name: FLAGD_PROXY_TAG
            value: "{{ .Values.flagdProxyConfiguration.image.tag }}"
          - name: FLAGD_PROXY_PORT
            value: "{{ .Values.flagdProxyConfiguration.port }}"
          - name: FLAGD_PROXY_MANAGEMENT_PORT
            value: "{{ .Values.flagdProxyConfiguration.managementPort }}"
          - name: FLAGD_PROXY_DEBUG_LOGGING
            value: "{{ .Values.flagdProxyConfiguration.debugLogging }}"
          - name: FLAGS_VALIDATION_ENABLED
            value: "{{ .Values.managerConfig.flagsValidatonEnabled }}"
        - name: kube-rbac-proxy
          image: "{{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag }}"
          resources:
            limits:
              cpu: "{{ .Values.controllerManager.kubeRbacProxy.resources.limits.cpu }}"
              memory: "{{ .Values.controllerManager.kubeRbacProxy.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.controllerManager.kubeRbacProxy.resources.requests.cpu }}"
              memory: "{{ .Values.controllerManager.kubeRbacProxy.resources.requests.memory }}"
