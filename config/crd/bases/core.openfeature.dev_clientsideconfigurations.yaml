---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: clientsideconfigurations.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: ClientSideConfiguration
    listKind: ClientSideConfigurationList
    plural: clientsideconfigurations
    singular: clientsideconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClientSideConfiguration is the Schema for the clientsideconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClientSideConfigurationSpec defines the desired state of
              ClientSideConfiguration
            properties:
              corsAllowOrigin:
                type: string
              flagSourceConfiguration:
                type: string
              gatewayClassName:
                type: string
              gatewayListenerPort:
                format: int32
                type: integer
              gatewayName:
                type: string
              httpRouteFilters:
                items:
                  description: HTTPRouteFilter defines processing steps that must
                    be completed during the request or response lifecycle. HTTPRouteFilters
                    are meant as an extension point to express processing that may
                    be done in Gateway implementations. Some examples include request
                    or response modification, implementing authentication strategies,
                    rate-limiting, and traffic shaping. API guarantee/conformance
                    is defined based on the type of the filter.
                  properties:
                    extensionRef:
                      description: "ExtensionRef is an optional, implementation-specific
                        extension to the \"filter\" behavior.  For example, resource
                        \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef
                        MUST NOT be used for core and extended filters. \n Support:
                        Implementation-specific"
                      properties:
                        group:
                          description: Group is the group of the referent. For example,
                            "gateway.networking.k8s.io". When unspecified or empty
                            string, core API group is inferred.
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          description: Kind is kind of the referent. For example "HTTPRoute"
                            or "Service".
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      type: object
                    requestHeaderModifier:
                      description: "RequestHeaderModifier defines a schema for a filter
                        that modifies request headers. \n Support: Core"
                      properties:
                        add:
                          description: "Add adds the given header(s) (name, value)
                            to the request before the action. It appends to any existing
                            values associated with the header name. \n Input: GET
                            /foo HTTP/1.1 my-header: foo \n Config: add: - name: \"my-header\"
                            value: \"bar,baz\" \n Output: GET /foo HTTP/1.1 my-header:
                            foo,bar,baz"
                          items:
                            description: HTTPHeader represents an HTTP Header name
                              and value as defined by RFC 7230.
                            properties:
                              name:
                                description: "Name is the name of the HTTP Header
                                  to be matched. Name matching MUST be case insensitive.
                                  (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                  \n If multiple entries specify equivalent header
                                  names, the first entry with an equivalent name MUST
                                  be considered for a match. Subsequent entries with
                                  an equivalent header name MUST be ignored. Due to
                                  the case-insensitivity of header names, \"foo\"
                                  and \"Foo\" are considered equivalent."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                type: string
                              value:
                                description: Value is the value of HTTP Header to
                                  be matched.
                                maxLength: 4096
                                minLength: 1
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          maxItems: 16
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        remove:
                          description: "Remove the given header(s) from the HTTP request
                            before the action. The value of Remove is a list of HTTP
                            header names. Note that the header names are case-insensitive
                            (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                            \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                            bar my-header3: baz \n Config: remove: [\"my-header1\",
                            \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                            bar"
                          items:
                            type: string
                          maxItems: 16
                          type: array
                        set:
                          description: "Set overwrites the request with the given
                            header (name, value) before the action. \n Input: GET
                            /foo HTTP/1.1 my-header: foo \n Config: set: - name: \"my-header\"
                            value: \"bar\" \n Output: GET /foo HTTP/1.1 my-header:
                            bar"
                          items:
                            description: HTTPHeader represents an HTTP Header name
                              and value as defined by RFC 7230.
                            properties:
                              name:
                                description: "Name is the name of the HTTP Header
                                  to be matched. Name matching MUST be case insensitive.
                                  (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                  \n If multiple entries specify equivalent header
                                  names, the first entry with an equivalent name MUST
                                  be considered for a match. Subsequent entries with
                                  an equivalent header name MUST be ignored. Due to
                                  the case-insensitivity of header names, \"foo\"
                                  and \"Foo\" are considered equivalent."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                type: string
                              value:
                                description: Value is the value of HTTP Header to
                                  be matched.
                                maxLength: 4096
                                minLength: 1
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          maxItems: 16
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                      type: object
                    requestMirror:
                      description: "RequestMirror defines a schema for a filter that
                        mirrors requests. Requests are sent to the specified destination,
                        but responses from that destination are ignored. \n Support:
                        Extended"
                      properties:
                        backendRef:
                          description: "BackendRef references a resource where mirrored
                            requests are sent. \n If the referent cannot be found,
                            this BackendRef is invalid and must be dropped from the
                            Gateway. The controller must ensure the \"ResolvedRefs\"
                            condition on the Route status is set to `status: False`
                            and not configure this backend in the underlying implementation.
                            \n If there is a cross-namespace reference to an *existing*
                            object that is not allowed by a ReferenceGrant, the controller
                            must ensure the \"ResolvedRefs\"  condition on the Route
                            is set to `status: False`, with the \"RefNotPermitted\"
                            reason and not configure this backend in the underlying
                            implementation. \n In either error case, the Message of
                            the `ResolvedRefs` Condition should be used to provide
                            more detail about the problem. \n Support: Extended for
                            Kubernetes Service \n Support: Implementation-specific
                            for any other resource"
                          properties:
                            group:
                              default: ""
                              description: Group is the group of the referent. For
                                example, "gateway.networking.k8s.io". When unspecified
                                or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example
                                "HTTPRoute" or "Service". Defaults to "Service" when
                                not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend.
                                When unspecified, the local namespace is inferred.
                                \n Note that when a namespace is specified, a ReferenceGrant
                                object is required in the referent namespace to allow
                                that namespace's owner to accept the reference. See
                                the ReferenceGrant documentation for details. \n Support:
                                Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number
                                to use for this resource. Port is required when the
                                referent is a Kubernetes Service. In this case, the
                                port number is the service port number, not the target
                                port. For other resources, destination port might
                                be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                          - name
                          type: object
                      required:
                      - backendRef
                      type: object
                    requestRedirect:
                      description: "RequestRedirect defines a schema for a filter
                        that responds to the request with an HTTP redirection. \n
                        Support: Core"
                      properties:
                        hostname:
                          description: "Hostname is the hostname to be used in the
                            value of the `Location` header in the response. When empty,
                            the hostname of the request is used. \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        path:
                          description: "Path defines parameters used to modify the
                            path of the incoming request. The modified path is then
                            used to construct the `Location` header. When empty, the
                            request path is used as-is. \n Support: Extended \n <gateway:experimental>"
                          properties:
                            replaceFullPath:
                              description: "ReplaceFullPath specifies the value with
                                which to replace the full path of a request during
                                a rewrite or redirect. \n <gateway:experimental>"
                              maxLength: 1024
                              type: string
                            replacePrefixMatch:
                              description: "ReplacePrefixMatch specifies the value
                                with which to replace the prefix match of a request
                                during a rewrite or redirect. For example, a request
                                to \"/foo/bar\" with a prefix match of \"/foo\" would
                                be modified to \"/bar\". \n Note that this matches
                                the behavior of the PathPrefix match type. This matches
                                full path elements. A path element refers to the list
                                of labels in the path split by the `/` separator.
                                When specified, a trailing `/` is ignored. For example,
                                the paths `/abc`, `/abc/`, and `/abc/def` would all
                                match the prefix `/abc`, but the path `/abcd` would
                                not. \n <gateway:experimental>"
                              maxLength: 1024
                              type: string
                            type:
                              description: "Type defines the type of path modifier.
                                Additional types may be added in a future release
                                of the API. \n Note that values may be added to this
                                enum, implementations must ensure that unknown values
                                will not cause a crash. \n Unknown values here must
                                result in the implementation setting the Accepted
                                Condition for the Route to `status: False`, with a
                                Reason of `UnsupportedValue`. \n <gateway:experimental>"
                              enum:
                              - ReplaceFullPath
                              - ReplacePrefixMatch
                              type: string
                          required:
                          - type
                          type: object
                        port:
                          description: "Port is the port to be used in the value of
                            the `Location` header in the response. When empty, port
                            (if specified) of the request is used. \n Support: Extended"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        scheme:
                          description: "Scheme is the scheme to be used in the value
                            of the `Location` header in the response. When empty,
                            the scheme of the request is used. \n Note that values
                            may be added to this enum, implementations must ensure
                            that unknown values will not cause a crash. \n Unknown
                            values here must result in the implementation setting
                            the Accepted Condition for the Route to `status: False`,
                            with a Reason of `UnsupportedValue`. \n Support: Extended"
                          enum:
                          - http
                          - https
                          type: string
                        statusCode:
                          default: 302
                          description: "StatusCode is the HTTP status code to be used
                            in response. \n Note that values may be added to this
                            enum, implementations must ensure that unknown values
                            will not cause a crash. \n Unknown values here must result
                            in the implementation setting the Accepted Condition for
                            the Route to `status: False`, with a Reason of `UnsupportedValue`.
                            \n Support: Core"
                          enum:
                          - 301
                          - 302
                          type: integer
                      type: object
                    responseHeaderModifier:
                      description: "ResponseHeaderModifier defines a schema for a
                        filter that modifies response headers. \n Support: Extended
                        \n <gateway:experimental>"
                      properties:
                        add:
                          description: "Add adds the given header(s) (name, value)
                            to the request before the action. It appends to any existing
                            values associated with the header name. \n Input: GET
                            /foo HTTP/1.1 my-header: foo \n Config: add: - name: \"my-header\"
                            value: \"bar,baz\" \n Output: GET /foo HTTP/1.1 my-header:
                            foo,bar,baz"
                          items:
                            description: HTTPHeader represents an HTTP Header name
                              and value as defined by RFC 7230.
                            properties:
                              name:
                                description: "Name is the name of the HTTP Header
                                  to be matched. Name matching MUST be case insensitive.
                                  (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                  \n If multiple entries specify equivalent header
                                  names, the first entry with an equivalent name MUST
                                  be considered for a match. Subsequent entries with
                                  an equivalent header name MUST be ignored. Due to
                                  the case-insensitivity of header names, \"foo\"
                                  and \"Foo\" are considered equivalent."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                type: string
                              value:
                                description: Value is the value of HTTP Header to
                                  be matched.
                                maxLength: 4096
                                minLength: 1
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          maxItems: 16
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        remove:
                          description: "Remove the given header(s) from the HTTP request
                            before the action. The value of Remove is a list of HTTP
                            header names. Note that the header names are case-insensitive
                            (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                            \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                            bar my-header3: baz \n Config: remove: [\"my-header1\",
                            \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                            bar"
                          items:
                            type: string
                          maxItems: 16
                          type: array
                        set:
                          description: "Set overwrites the request with the given
                            header (name, value) before the action. \n Input: GET
                            /foo HTTP/1.1 my-header: foo \n Config: set: - name: \"my-header\"
                            value: \"bar\" \n Output: GET /foo HTTP/1.1 my-header:
                            bar"
                          items:
                            description: HTTPHeader represents an HTTP Header name
                              and value as defined by RFC 7230.
                            properties:
                              name:
                                description: "Name is the name of the HTTP Header
                                  to be matched. Name matching MUST be case insensitive.
                                  (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                  \n If multiple entries specify equivalent header
                                  names, the first entry with an equivalent name MUST
                                  be considered for a match. Subsequent entries with
                                  an equivalent header name MUST be ignored. Due to
                                  the case-insensitivity of header names, \"foo\"
                                  and \"Foo\" are considered equivalent."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                type: string
                              value:
                                description: Value is the value of HTTP Header to
                                  be matched.
                                maxLength: 4096
                                minLength: 1
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          maxItems: 16
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                      type: object
                    type:
                      description: "Type identifies the type of filter to apply. As
                        with other API fields, types are classified into three conformance
                        levels: \n - Core: Filter types and their corresponding configuration
                        defined by \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\".
                        All implementations must support core filters. \n - Extended:
                        Filter types and their corresponding configuration defined
                        by \"Support: Extended\" in this package, e.g. \"RequestMirror\".
                        Implementers are encouraged to support extended filters. \n
                        - Implementation-specific: Filters that are defined and supported
                        by specific vendors. In the future, filters showing convergence
                        in behavior across multiple implementations will be considered
                        for inclusion in extended or core conformance levels. Filter-specific
                        configuration for such filters is specified using the ExtensionRef
                        field. `Type` should be set to \"ExtensionRef\" for custom
                        filters. \n Implementers are encouraged to define custom implementation
                        types to extend the core API with implementation-specific
                        behavior. \n If a reference to a custom filter type cannot
                        be resolved, the filter MUST NOT be skipped. Instead, requests
                        that would have been processed by that filter MUST receive
                        a HTTP error response. \n Note that values may be added to
                        this enum, implementations must ensure that unknown values
                        will not cause a crash. \n Unknown values here must result
                        in the implementation setting the Accepted Condition for the
                        Route to `status: False`, with a Reason of `UnsupportedValue`.
                        \n <gateway:experimental:validation:Enum=RequestHeaderModifier;ResponseHeaderModifier;RequestMirror;RequestRedirect;URLRewrite;ExtensionRef>"
                      enum:
                      - RequestHeaderModifier
                      - RequestMirror
                      - RequestRedirect
                      - ExtensionRef
                      type: string
                    urlRewrite:
                      description: "URLRewrite defines a schema for a filter that
                        modifies a request during forwarding. \n Support: Extended
                        \n <gateway:experimental>"
                      properties:
                        hostname:
                          description: "Hostname is the value to be used to replace
                            the Host header value during forwarding. \n Support: Extended
                            \n <gateway:experimental>"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        path:
                          description: "Path defines a path rewrite. \n Support: Extended
                            \n <gateway:experimental>"
                          properties:
                            replaceFullPath:
                              description: "ReplaceFullPath specifies the value with
                                which to replace the full path of a request during
                                a rewrite or redirect. \n <gateway:experimental>"
                              maxLength: 1024
                              type: string
                            replacePrefixMatch:
                              description: "ReplacePrefixMatch specifies the value
                                with which to replace the prefix match of a request
                                during a rewrite or redirect. For example, a request
                                to \"/foo/bar\" with a prefix match of \"/foo\" would
                                be modified to \"/bar\". \n Note that this matches
                                the behavior of the PathPrefix match type. This matches
                                full path elements. A path element refers to the list
                                of labels in the path split by the `/` separator.
                                When specified, a trailing `/` is ignored. For example,
                                the paths `/abc`, `/abc/`, and `/abc/def` would all
                                match the prefix `/abc`, but the path `/abcd` would
                                not. \n <gateway:experimental>"
                              maxLength: 1024
                              type: string
                            type:
                              description: "Type defines the type of path modifier.
                                Additional types may be added in a future release
                                of the API. \n Note that values may be added to this
                                enum, implementations must ensure that unknown values
                                will not cause a crash. \n Unknown values here must
                                result in the implementation setting the Accepted
                                Condition for the Route to `status: False`, with a
                                Reason of `UnsupportedValue`. \n <gateway:experimental>"
                              enum:
                              - ReplaceFullPath
                              - ReplacePrefixMatch
                              type: string
                          required:
                          - type
                          type: object
                      type: object
                  required:
                  - type
                  type: object
                type: array
              httpRouteHostname:
                type: string
              httpRouteMatches:
                items:
                  description: "HTTPRouteMatch defines the predicate used to match
                    requests to a given action. Multiple match types are ANDed together,
                    i.e. the match will evaluate to true only if all conditions are
                    satisfied. \n For example, the match below will match a HTTP request
                    only if its path starts with `/foo` AND it contains the `version:
                    v1` header: \n ``` match: \n path: value: \"/foo\" headers: -
                    name: \"version\" value \"v1\" \n ```"
                  properties:
                    headers:
                      description: Headers specifies HTTP request header matchers.
                        Multiple match values are ANDed together, meaning, a request
                        must match all the specified headers to select the route.
                      items:
                        description: HTTPHeaderMatch describes how to select a HTTP
                          route by matching HTTP request headers.
                        properties:
                          name:
                            description: "Name is the name of the HTTP Header to be
                              matched. Name matching MUST be case insensitive. (See
                              https://tools.ietf.org/html/rfc7230#section-3.2). \n
                              If multiple entries specify equivalent header names,
                              only the first entry with an equivalent name MUST be
                              considered for a match. Subsequent entries with an equivalent
                              header name MUST be ignored. Due to the case-insensitivity
                              of header names, \"foo\" and \"Foo\" are considered
                              equivalent. \n When a header is repeated in an HTTP
                              request, it is implementation-specific behavior as to
                              how this is represented. Generally, proxies should follow
                              the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                              regarding processing a repeated header, with special
                              handling for \"Set-Cookie\"."
                            maxLength: 256
                            minLength: 1
                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            type: string
                          type:
                            default: Exact
                            description: "Type specifies how to match against the
                              value of the header. \n Support: Core (Exact) \n Support:
                              Implementation-specific (RegularExpression) \n Since
                              RegularExpression HeaderMatchType has implementation-specific
                              conformance, implementations can support POSIX, PCRE
                              or any other dialects of regular expressions. Please
                              read the implementation's documentation to determine
                              the supported dialect."
                            enum:
                            - Exact
                            - RegularExpression
                            type: string
                          value:
                            description: Value is the value of HTTP Header to be matched.
                            maxLength: 4096
                            minLength: 1
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      maxItems: 16
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    method:
                      description: "Method specifies HTTP method matcher. When specified,
                        this route will be matched only if the request has the specified
                        method. \n Support: Extended"
                      enum:
                      - GET
                      - HEAD
                      - POST
                      - PUT
                      - DELETE
                      - CONNECT
                      - OPTIONS
                      - TRACE
                      - PATCH
                      type: string
                    path:
                      default:
                        type: PathPrefix
                        value: /
                      description: Path specifies a HTTP request path matcher. If
                        this field is not specified, a default prefix match on the
                        "/" path is provided.
                      properties:
                        type:
                          default: PathPrefix
                          description: "Type specifies how to match against the path
                            Value. \n Support: Core (Exact, PathPrefix) \n Support:
                            Implementation-specific (RegularExpression)"
                          enum:
                          - Exact
                          - PathPrefix
                          - RegularExpression
                          type: string
                        value:
                          default: /
                          description: Value of the HTTP path to match against.
                          maxLength: 1024
                          type: string
                      type: object
                    queryParams:
                      description: "QueryParams specifies HTTP query parameter matchers.
                        Multiple match values are ANDed together, meaning, a request
                        must match all the specified query parameters to select the
                        route. \n Support: Extended"
                      items:
                        description: HTTPQueryParamMatch describes how to select a
                          HTTP route by matching HTTP query parameters.
                        properties:
                          name:
                            description: "Name is the name of the HTTP query param
                              to be matched. This must be an exact string match. (See
                              https://tools.ietf.org/html/rfc7230#section-2.7.3).
                              \n If multiple entries specify equivalent query param
                              names, only the first entry with an equivalent name
                              MUST be considered for a match. Subsequent entries with
                              an equivalent query param name MUST be ignored. \n If
                              a query param is repeated in an HTTP request, the behavior
                              is purposely left undefined, since different data planes
                              have different capabilities. However, it is *recommended*
                              that implementations should match against the first
                              value of the param if the data plane supports it, as
                              this behavior is expected in other load balancing contexts
                              outside of the Gateway API. \n Users SHOULD NOT route
                              traffic based on repeated query params to guard themselves
                              against potential differences in the implementations."
                            maxLength: 256
                            minLength: 1
                            type: string
                          type:
                            default: Exact
                            description: "Type specifies how to match against the
                              value of the query parameter. \n Support: Extended (Exact)
                              \n Support: Implementation-specific (RegularExpression)
                              \n Since RegularExpression QueryParamMatchType has Implementation-specific
                              conformance, implementations can support POSIX, PCRE
                              or any other dialects of regular expressions. Please
                              read the implementation's documentation to determine
                              the supported dialect."
                            enum:
                            - Exact
                            - RegularExpression
                            type: string
                          value:
                            description: Value is the value of HTTP query param to
                              be matched.
                            maxLength: 1024
                            minLength: 1
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      maxItems: 16
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                  type: object
                type: array
              httpRouteName:
                type: string
              serviceAccountName:
                type: string
            required:
            - corsAllowOrigin
            - flagSourceConfiguration
            - gatewayClassName
            - gatewayListenerPort
            - gatewayName
            - httpRouteHostname
            - httpRouteName
            - serviceAccountName
            type: object
          status:
            description: ClientSideConfigurationStatus defines the observed state
              of ClientSideConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
