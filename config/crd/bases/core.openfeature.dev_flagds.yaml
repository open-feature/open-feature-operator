---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: flagds.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: Flagd
    listKind: FlagdList
    plural: flagds
    singular: flagd
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Flagd is the Schema for the flagds API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FlagdSpec defines the desired state of Flagd
            properties:
              featureFlagSourceRef:
                description: |-
                  FeatureFlagSourceRef references to a FeatureFlagSource from which the created flagd instance retrieves
                  the feature flag configurations
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              ingress:
                description: Ingress
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations the annotations to be added to the ingress
                    type: object
                  enabled:
                    description: Enabled enables/disables the ingress for flagd
                    type: boolean
                  hosts:
                    description: Hosts list of hosts to be added to the ingress
                    items:
                      type: string
                    type: array
                  tls:
                    description: TLS configuration for the ingress
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an Ingress.
                      properties:
                        hosts:
                          description: |-
                            Hosts are a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            SecretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the Host header is used for routing.
                          type: string
                      type: object
                    type: array
                type: object
              nodePort:
                description: NodePort represents the port at which the NodePort service
                  to allocate
                format: int32
                type: integer
              otelCollectorUri:
                description: OtelCollectorUri defines the OpenTelemetry collector
                  URI to enable OpenTelemetry Tracing in flagd.
                type: string
              replicas:
                description: Replicas defines the number of replicas to create for
                  the service
                format: int32
                type: integer
              serviceAccountName:
                description: ServiceAccountName the service account name for the flagd
                  deployment
                type: string
              serviceType:
                default: ClusterIP
                description: |-
                  ServiceType represents the type of Service to create.
                  Must be one of: ClusterIP, NodePort, LoadBalancer, and ExternalName.
                  Default: ClusterIP
                type: string
            required:
            - featureFlagSourceRef
            type: object
          status:
            description: FlagdStatus defines the observed state of Flagd
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
