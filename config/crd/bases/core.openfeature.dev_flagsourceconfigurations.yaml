---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: flagsourceconfigurations.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: FlagSourceConfiguration
    listKind: FlagSourceConfigurationList
    plural: flagsourceconfigurations
    shortNames:
    - fsc
    singular: flagsourceconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FlagSourceConfiguration is the Schema for the FlagSourceConfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FlagSourceConfigurationSpec defines the desired state of
              FlagSourceConfiguration
            properties:
              defaultSyncProvider:
                description: DefaultSyncProvider defines the default sync provider
                type: string
              envVarPrefix:
                description: EnvVarPrefix defines the prefix to be applied to all
                  environment variables applied to the sidecar, default FLAGD
                type: string
              envVars:
                description: EnvVars define the env vars to be applied to the sidecar,
                  any env vars in FeatureFlagConfiguration CRs are added at the lowest
                  index, all values will have the EnvVarPrefix applied
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              evaluator:
                description: Evaluator sets an evaluator, defaults to 'json'
                type: string
              image:
                description: Image allows for the sidecar image to be overridden,
                  defaults to 'ghcr.io/open-feature/flagd'
                type: string
              logFormat:
                description: LogFormat allows for the sidecar log format to be overridden,
                  defaults to 'json'
                type: string
              metricsPort:
                description: MetricsPort defines the port to serve metrics on, defaults
                  to 8014
                format: int32
                type: integer
              port:
                description: Port defines the port to listen on, defaults to 8013
                format: int32
                type: integer
              rolloutOnChange:
                description: RolloutOnChange dictates whether annotated deployments
                  will be restarted when configuration changes are detected in this
                  CR, defaults to false
                type: boolean
              socketPath:
                description: SocketPath defines the unix socket path to listen on
                type: string
              sources:
                description: Sources defines the syncProviders and associated configuration
                  to be applied to the sidecar
                items:
                  properties:
                    httpSyncBearerToken:
                      type: string
                    logFormat:
                      description: LogFormat allows for the sidecar log format to
                        be overridden, defaults to 'json'
                      type: string
                    provider:
                      type: string
                    source:
                      type: string
                  required:
                  - source
                  type: object
                minItems: 1
                type: array
              syncProviderArgs:
                description: SyncProviderArgs are string arguments passed to all sync
                  providers, defined as key values separated by =
                items:
                  type: string
                type: array
              tag:
                description: Tag to be appended to the sidecar image, defaults to
                  'main'
                type: string
            required:
            - sources
            type: object
          status:
            description: FlagSourceConfigurationStatus defines the observed state
              of FlagSourceConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: FlagSourceConfiguration is the Schema for the FlagSourceConfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FlagSourceConfigurationSpec defines the desired state of
              FlagSourceConfiguration
            properties:
              defaultSyncProvider:
                description: DefaultSyncProvider defines the default sync provider
                type: string
              evaluator:
                description: Evaluator sets an evaluator, defaults to 'json'
                type: string
              image:
                description: Image allows for the sidecar image to be overridden,
                  defaults to 'ghcr.io/open-feature/flagd'
                type: string
              logFormat:
                description: LogFormat allows for the sidecar log format to be overridden,
                  defaults to 'json'
                type: string
              metricsPort:
                description: MetricsPort defines the port to serve metrics on, defaults
                  to 8013
                format: int32
                type: integer
              port:
                description: Port defines the port to listen on, defaults to 8014
                format: int32
                type: integer
              socketPath:
                description: SocketPath defines the unix socket path to listen on
                type: string
              syncProviderArgs:
                description: SyncProviderArgs are string arguments passed to all sync
                  providers, defined as key values separated by =
                items:
                  type: string
                type: array
              tag:
                description: Tag to be appended to the sidecar image, defaults to
                  'main'
                type: string
            type: object
          status:
            description: FlagSourceConfigurationStatus defines the observed state
              of FlagSourceConfiguration
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: FlagSourceConfiguration is the Schema for the FlagSourceConfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FlagSourceConfigurationSpec defines the desired state of
              FlagSourceConfiguration
            properties:
              defaultSyncProvider:
                description: DefaultSyncProvider defines the default sync provider
                type: string
              envVarPrefix:
                description: EnvVarPrefix defines the prefix to be applied to all
                  environment variables applied to the sidecar, default FLAGD
                type: string
              envVars:
                description: EnvVars define the env vars to be applied to the sidecar,
                  any env vars in FeatureFlagConfiguration CRs are added at the lowest
                  index, all values will have the EnvVarPrefix applied, default FLAGD
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              evaluator:
                description: Evaluator sets an evaluator, defaults to 'json'
                type: string
              image:
                description: Image allows for the sidecar image to be overridden,
                  defaults to 'ghcr.io/open-feature/flagd'
                type: string
              logFormat:
                description: LogFormat allows for the sidecar log format to be overridden,
                  defaults to 'json'
                type: string
              metricsPort:
                description: MetricsPort defines the port to serve metrics on, defaults
                  to 8014
                format: int32
                type: integer
              port:
                description: Port defines the port to listen on, defaults to 8013
                format: int32
                type: integer
              rolloutOnChange:
                description: RolloutOnChange dictates whether annotated deployments
                  will be restarted when configuration changes are detected in this
                  CR, defaults to false
                type: boolean
              socketPath:
                description: SocketPath defines the unix socket path to listen on
                type: string
              sources:
                description: SyncProviders define the syncProviders and associated
                  configuration to be applied to the sidecar
                items:
                  properties:
                    httpSyncBearerToken:
                      type: string
                    provider:
                      type: string
                    source:
                      type: string
                  required:
                  - source
                  type: object
                minItems: 1
                type: array
              syncProviderArgs:
                description: SyncProviderArgs are string arguments passed to all sync
                  providers, defined as key values separated by =
                items:
                  type: string
                type: array
              tag:
                description: Tag to be appended to the sidecar image, defaults to
                  'main'
                type: string
            required:
            - sources
            type: object
          status:
            description: FlagSourceConfigurationStatus defines the observed state
              of FlagSourceConfiguration
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
